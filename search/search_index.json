{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Modal PyPI Server","text":"<p>Welcome to the documentation for the Modal PyPI Server! This project allows you to quickly deploy a private PyPI server using Modal's serverless infrastructure.</p>"},{"location":"#quickstart","title":"Quickstart","text":""},{"location":"#deploy-your-pypi-server","title":"Deploy your PyPI server","text":"<pre><code>modal deploy deployments/pypi_deploy.py\n</code></pre>"},{"location":"#register-a-user","title":"Register a user","text":"<p>You can register users using the FastAPI endpoint provided. You'll need to have your admin authentication token ready.</p> <pre><code>curl -X POST \"https://yourusername--pypiserver-register-user.modal.run\" \\\n  -H \"Authorization: Bearer your-admin-token\" \\\n  -d '{\"username\": \"newuser\", \"password\": \"securepassword\"}'\n</code></pre>"},{"location":"#configure-pip-to-use-your-pypi-server","title":"Configure pip to use your PyPI server","text":"<p>Add the following to your <code>~/.pip/pip.conf</code> file:</p> <pre><code>[global]\nindex-url = https://your-modal-url.modal.run/simple\n# Replace 'yourusername' with your actual Modal username\n# This should be the URL of your Modal endpoint + '/simple'\nextra-index-url = https://pypi.org/simple\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>For a deeper understanding of how this PyPI server works:</p> <ul> <li>Detailed explanation of the deployment script and CI/CD pipeline</li> <li>API reference</li> </ul>"},{"location":"#why-this-project-exists","title":"Why this project exists","text":"<p>This project exists to provide a simple, serverless solution for hosting private Python packages. It leverages Modal's infrastructure to:</p> <ul> <li>Avoid the need to manage your own server</li> <li>Provide persistent storage for packages and user credentials</li> <li>Offer a quick way to set up a private PyPI server</li> <li>Enable secure package distribution within teams and organizations</li> </ul>"},{"location":"api/","title":"Top-level API for modal-pypi-server","text":"<p>::: modal_pypi_server</p>"},{"location":"pypi_deploy_explanation/","title":"PyPI Server Deployment Explained","text":"<p>This document provides a detailed explanation of how the Modal-based PyPI server deployment works. It follows the Di\u00e1taxis documentation framework, which separates documentation into tutorials, how-to guides, explanations, and reference material.</p>"},{"location":"pypi_deploy_explanation/#what-is-the-pypi-server","title":"What is the PyPI Server?","text":"<p>The PyPI server is a private Python Package Index that allows you to host and distribute your own Python packages within your organization or team. This implementation uses Modal as a serverless deployment platform and provides basic authentication for secure package management.</p>"},{"location":"pypi_deploy_explanation/#how-the-deployment-works","title":"How the Deployment Works","text":"<p>The deployment is defined in <code>deployments/pypi_deploy.py</code> and consists of several key components:</p>"},{"location":"pypi_deploy_explanation/#1-base-image-configuration","title":"1. Base Image Configuration","text":"<pre><code>image = (\n    modal.Image.debian_slim(python_version=\"3.12\")\n    .pip_install(\"pypiserver[passlib]\")\n    .apt_install(\"apache2-utils\")\n)\n</code></pre> <p>This code sets up a Debian Slim container with Python 3.12 and installs:</p> <ul> <li><code>pypiserver[passlib]</code>: The PyPI server implementation with password hashing capabilities</li> <li><code>apache2-utils</code>: Provides the <code>htpasswd</code> utility for managing user credentials</li> </ul>"},{"location":"pypi_deploy_explanation/#2-modal-app-and-volume-configuration","title":"2. Modal App and Volume Configuration","text":"<pre><code>app = modal.App(name=\"pypiserver\")\n\ndata_volume = modal.Volume.from_name(\"pypiserver-data\", create_if_missing=True)\ncredentials_volume = modal.Volume.from_name(\n    \"pypiserver-credentials\", create_if_missing=True\n)\n</code></pre> <p>This section:</p> <ul> <li>Creates a Modal app named \"pypiserver\"</li> <li>Sets up two persistent volumes:</li> <li><code>pypiserver-data</code>: Stores the actual Python packages</li> <li><code>pypiserver-credentials</code>: Stores the <code>.htpasswd</code> file containing user credentials</li> </ul> <p>When Modal creates these volumes (if they don't exist), they persist across deployments. This means your packages and user credentials are preserved even when you update the application code.</p>"},{"location":"pypi_deploy_explanation/#3-pypi-server-function","title":"3. PyPI Server Function","text":"<pre><code>@app.function(\n    image=image,\n    volumes={\"/data/packages\": data_volume, \"/credentials\": credentials_volume},\n)\n@modal.web_server(8080)\ndef server():\n    \"\"\"Run the pypi server.\"\"\"\n    import subprocess\n\n    subprocess.Popen(\n        \"pypi-server run -a 'download, list, update' -p 8080 /data/packages -P /credentials/.htpasswd\",\n        shell=True,\n    )\n</code></pre> <p>This function:</p> <ul> <li>Mounts the volumes at <code>/data/packages</code> and <code>/credentials</code></li> <li>Exposes a web server on port 8080</li> <li>Runs the PyPI server with these operations requiring authentication:</li> <li><code>download</code>: Authentication required to download packages</li> <li><code>list</code>: Authentication required to list available packages</li> <li><code>update</code>: Authentication required to upload/update packages</li> <li>Points to the package storage at <code>/data/packages</code></li> <li>Uses HTTP Basic Authentication with credentials from <code>/credentials/.htpasswd</code></li> </ul> <p>Modal handles all the infrastructure needed to expose this as a public web service, so there's no need to manage servers, URLs, or domain names.</p>"},{"location":"pypi_deploy_explanation/#4-user-registration-endpoint","title":"4. User Registration Endpoint","text":"<pre><code>@app.function(\n    image=image,\n    volumes={\"/credentials\": credentials_volume},\n    secrets=[modal.Secret.from_name(\"pypi-auth-token\")],\n)\n@modal.fastapi_endpoint(docs=True)\nasync def register_user(\n    username: str,\n    password: str,\n    token: HTTPAuthorizationCredentials = Depends(auth_scheme),\n):\n    \"\"\"Register a new user.\"\"\"\n    # Implementation details...\n</code></pre> <p>This FastAPI endpoint provides an API for registering new users. It:</p> <ul> <li>Requires an admin authentication token for security</li> <li>Takes a username and password as parameters</li> <li>Creates or updates the <code>.htpasswd</code> file with the new user credentials</li> <li>Provides a simple way for administrators to add users without direct access to the server</li> </ul> <p>The admin token is stored as a Modal secret, ensuring it's not hardcoded in your source code.</p>"},{"location":"pypi_deploy_explanation/#continuous-deployment-with-github-actions","title":"Continuous Deployment with GitHub Actions","text":"<p>To ensure the PyPI server is always up-to-date with the latest code changes, this project includes a GitHub Actions workflow for continuous deployment. The workflow is defined in <code>.github/workflows/deploy-modal.yaml</code>:</p> <pre><code>name: CI/CD\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  deploy:\n    name: Deploy\n    runs-on: ubuntu-latest\n    env:\n      MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}\n      MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}\n\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v4\n\n      - name: Install the latest version of uv\n        uses: astral-sh/setup-uv@v5\n        with:\n          version: \"latest\"\n          enable-cache: true\n\n      - name: Deploy\n        run: |\n          uvx modal deploy deployments/pypi_deploy.py\n</code></pre>"},{"location":"pypi_deploy_explanation/#how-the-cicd-pipeline-works","title":"How the CI/CD Pipeline Works","text":"<ol> <li> <p>Trigger: The workflow is triggered automatically whenever code is pushed to the <code>main</code> branch.</p> </li> <li> <p>Environment Setup:</p> </li> <li>The workflow runs on an Ubuntu latest runner.</li> <li>It uses GitHub Secrets to securely store and access Modal authentication tokens.</li> <li> <p>The <code>MODAL_TOKEN_ID</code> and <code>MODAL_TOKEN_SECRET</code> are essential for authenticating with Modal's API.</p> </li> <li> <p>Code Checkout:</p> </li> <li> <p>The workflow checks out the latest version of the repository code.</p> </li> <li> <p>Tool Installation:</p> </li> <li>It installs the latest version of uv, a fast Python package installer and resolver.</li> <li> <p>Caching is enabled to speed up subsequent workflow runs.</p> </li> <li> <p>Deployment:</p> </li> <li>The workflow uses <code>uvx modal deploy</code> to deploy the PyPI server application to Modal.</li> <li>The <code>deployments/pypi_deploy.py</code> script is the entry point for deployment.</li> </ol>"},{"location":"pypi_deploy_explanation/#benefits-of-continuous-deployment","title":"Benefits of Continuous Deployment","text":"<ul> <li>Automation: Code changes are automatically deployed without manual intervention.</li> <li>Consistency: Every deployment uses the same process, reducing human error.</li> <li>Auditability: Deployment history is tracked in GitHub Actions logs.</li> <li>Security: Sensitive credentials are stored as GitHub Secrets, not in the code.</li> </ul>"},{"location":"pypi_deploy_explanation/#security-considerations","title":"Security Considerations","text":"<p>The deployment includes these security measures:</p> <ol> <li>HTTP Basic Authentication: Users must provide a username and password to access the PyPI server</li> <li>Admin Token Authentication: A separate token is required to register new users</li> <li>Persistent Volumes: Credentials and packages are stored in persistent Modal volumes</li> <li>Limited Permissions: The PyPI server is configured to allow only specific operations</li> <li>Secret Management: Sensitive credentials are stored in Modal secrets and GitHub Secrets</li> </ol>"},{"location":"pypi_deploy_explanation/#architecture-diagram","title":"Architecture Diagram","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                     GitHub Repository                       \u2502\n\u2502                                                            \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                     \u2502\n\u2502  \u2502 Source Code \u2502\u2500\u2500\u2500&gt;\u2502 GitHub Actions \u2502                     \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2502\n                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                      Modal Platform                        \u2502\n\u2502                                                           \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u2502\n\u2502  \u2502   PyPI Server   \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2502  CI/CD Pipeline  \u2502          \u2502\n\u2502  \u2502    Function     \u2502       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                     \u2502\n\u2502           \u2502                                              \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n\u2502  \u2502 User Register   \u2502    \u2502     Modal Secrets   \u2502         \u2502\n\u2502  \u2502    Endpoint     \u2502\u25c4\u2500\u2500\u2500\u2502  (AUTH_TOKEN, etc.) \u2502         \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n\u2502           \u2502                                              \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u2502\n\u2502  \u2502 Package Volume  \u2502    \u2502 Credentials Volume  \u2502         \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"pypi_deploy_explanation/#when-to-use-this","title":"When to Use This","text":"<p>This deployment is suitable for:</p> <ul> <li>Teams or organizations that need to host private Python packages</li> <li>Situations where you need quick setup of a private PyPI server</li> <li>Environments where serverless deployment is preferred over managing infrastructure</li> <li>Projects that benefit from continuous deployment of infrastructure changes</li> </ul> <p>For high-security or high-volume production environments, consider additional security measures like HTTPS and more robust authentication mechanisms.</p>"}]}